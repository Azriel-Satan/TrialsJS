@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,600,700");
@import url("https://netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.css");
/* Things I stole from TITS */
:root {
  --textColor: #FFF;
  --backgroundColor: #3D5174;
  --foregroundColorA: #333E52;
  --foregroundColorB: #2C3649;
  --highlightColor: #8D31B0;
  --paleColor: #53677B;
  --focusColor: #00F5EF;
  --paleFocusColor: #64889D;
  --lightBackgroundColor: #647490;
  --holoLightColor: #A6C6FF;
  --shadowColor: #202735;
  --shadowColorSemiTransparent: rgba(32, 39, 53, 0.2);
  --lightColor: #FFF;
  --lightColorSemiTransparent: rgba(255, 255, 255, 0.2);
  --hyperlinkColor: #D982EF;
  --activeHyperlinkColor: #A1376F;
  --positiveColor: #0CD71C;
  --negativeColor: #FF0000;
  --cautionColor: #E8C815;
  --passiveColor: #D982EF;
  --lowPriorityColor: #B793C4;
  --debugColor: #FFA90A;
  --shieldDamageColor: #00CCFF;
  --shieldHealColor: #CAF3FF;
  --hpDamageColor: #00CC2F;
  --hpHealColor: #00FF16;
  --lustDamageColor: #FF00F0;
  --lustHealColor: #FFADC4;
  --energyDamageColor: #FFD207;
  --energyHealColor: #FFF3BE;
}

.statusEffectDisplay {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: flex-start;
  text-align: left;
  line-height: 0;
  position: relative;
  width: 100%;
  height: 28.5%;
  min-height: 2em;
  max-height: 2.825em;
  padding: 0.2em 0.5em 0.2em 0.5em;
  margin: 0 -0.5em -0.2em -0.5em;
  flex: 1;
  z-index: 1;
  overflow: auto;
  box-shadow: inset 0 0 0 0 var(--focusColor);
}
.statusEffectBlock {
  position: relative;
  display: inline-block;
  width: 5em;
  height: 5em;
  background-color: var(--backgroundColor);
  border-radius: 0.3125em;
  margin: 2px;
  fill: var(--textColor);
  color: var(--textColor);
  overflow: hidden;
}

*, *:before, *:after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  height: 100%;
  scrollbar-color: var(--foregroundColorB);
  scrollbar-width: thin;
  overflow-y: scroll;
}

body {
  padding-top: 20px;
  font: 14px/1 'Open Sans', sans-serif;
  color: var(--textColor);
  background: var(--foregroundColorB);
}

#titleheader {
  float: right;
  font-size: xx-large;
  padding: 20px 0;
  font-weight: bold;
  text-align: center;
  position: relative;
  right: 5vw;
}

p {
  margin: 0 0 20px;
  line-height: 1.5;
}

main {
  min-width: 320px;
  max-width: 95vw;
  padding: 25px;
  margin: 0 auto;
  background: var(--backgroundColor);
}

.topselector {
  display: none;
  padding: 20px 0 0;
  border-top: 5px solid var(--highlightColor);
}

.HeaderTabs {
  display: none;
}

label {
  display: inline-block;
  margin: 0 0 -1px;
  padding: 15px 25px;
  font-weight: 600;
  text-align: center;
  color: var(--textColor);
  border: 1px solid transparent;
}

/* Tabs */
label:before {
  font-family: fontawesome;
  font-weight: normal;
  margin-right: 10px;
}

label[for*='1']:before {
  content: '\1F4C8';
}

label[for*='2']:before {
  content: '\f17d';
}

label[for*='3']:before {
  content: '\2764';
}

label[for*='4']:before {
  content: '\2694';
}

label[for*='5']:before {
  content: '\f1a9';
}

label[for*='6']:before {
  content: '\2691';
}

label:hover {
  color: #888;
  cursor: pointer;
}

input:checked + label {
  color: var(--textColor);
  border: 0px solid var(--highlightColor);
  border-top: 0px solid orange;
  border-bottom: 1px solid var(--highlightColor);
  background: var(--paleColor);
}

#tab1:checked ~ #content1,
#tab2:checked ~ #content2,
#tab3:checked ~ #content3,
#tab4:checked ~ #content4,
#tab5:checked ~ #content5,
#tab6:checked ~ #content6 {
  display: block;
}

/* Grid */
.CharacterGridFourAcross {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.CharacterGridThreeAcross {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.CharacterGridTwoAcross {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.StatusGridFourAcross {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.StatusGridThreeAcross {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.StatusGridTwoAcross {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.StatusApplyGridFourAcross {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.StatusApplyGridThreeAcross {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
}
.StatusApplyGridTwoAcross {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: minmax(100px, auto);
}

.statusGrid{
  position: relative;
  margin: 0.1vw;
  display:block;
  text-align: left;;
  background-color: var(--paleColor);
  min-height: 300px;
  max-width: 23vw;
}

.statusGrid h2 {
  margin: 0;
  padding: 10px;
  color: white;
  background-color: var(--paleColor);
}

.statusGridWide {
  max-width: 47vw;
  grid-column: span 2;
}

.enemyGrid{
  position: relative;
  margin: 2%;
  display:block;
  text-align: left;;
  background-color: var(--paleColor);
  min-height: 300px;
}

.enemyGrid h2 {
  margin: 0;
  padding: 10px;
  color: white;
  background-color: var(--paleColor);
}

.statusBoxHeader {
  position: relative;
  background-color: var(--backgroundColor);
  display: flex;
}

.statusEffectDescription {
  height: 70%;
}

.statusEffectHeaderText {
  font-size: 25px;
  font-weight: bolder;
}

.substatusgrid{
  position: relative;
  margin: 2%;
  display:block;
  text-align: left;;
  background-color: var(--paleColor);
  margin: 2px;
}

.widthsideimg {
  float: right;
  width: 100%;
  max-width: 50%;
  max-height: 120%;
  object-fit: cover;
  position: absolute;
  right: 0;
  top: 0;
  background-color: var(--paleColor);
}

.sideimg {
  float: right;
  height: 100%;
  max-width: 50%;
  max-height: 120%;
  object-fit: cover;
  position: absolute;
  right: 0;
  top: 0;
  background-color: var(--paleColor);
}

.sideimglayer {
  opacity: 0;
  }
  .sideimglayer:hover {
  transition: opacity 0.1s ease-in-out;
  opacity: 1;
  }

.halfBoxLeft {
  width:50%;
  float: left;
  padding: 5px;
}

.halfBoxRight {
  width:50%;
  float: right;
  padding: 5px;
}

.halfBoxTop {
  padding: 5px;
  padding-bottom: 0;
}

.halfBoxBottom {
  padding: 5px;
  bottom: 0;
  position: relative;
  padding-top: 0;
}

.codePadding {
  padding: 5px;
}

/* Collapsables */
summary {
  font: 25px/1 'Open Sans', sans-serif;
  font-weight: bold;
  color: var(--textColor);
}
.statusCategory {
  display: inline-block;
}
details {
  position: relative;
  border-radius: 3px;
  transition: 0.15s background linear;
  background: var(--paleColor)
}
details:hover {
  background: var(--backgroundColor);
}
details[open] {
  background: var(--backgroundColor);
}


summary {
  padding: 10px;
  list-style: none;
  padding-left: 33px;
}

.IconMaps {
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-map" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M15.817.113A.5.5 0 0 1 16 .5v14a.5.5 0 0 1-.402.49l-5 1a.502.502 0 0 1-.196 0L5.5 15.01l-4.902.98A.5.5 0 0 1 0 15.5v-14a.5.5 0 0 1 .402-.49l5-1a.5.5 0 0 1 .196 0L10.5.99l4.902-.98a.5.5 0 0 1 .415.103zM10 1.91l-4-.8v12.98l4 .8V1.91zm1 12.98 4-.8V1.11l-4 .8v12.98zm-6-.8V1.11l-4 .8v12.98l4-.8z"/></svg>') 11px 11.5px
  no-repeat;
}
.IconStatus {
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-hexagon-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.5.134a1 1 0 0 0-1 0l-6 3.577a1 1 0 0 0-.5.866v6.846a1 1 0 0 0 .5.866l6 3.577a1 1 0 0 0 1 0l6-3.577a1 1 0 0 0 .5-.866V4.577a1 1 0 0 0-.5-.866L8.5.134z"/></svg>') 11px 11.5px
  no-repeat;
}
.IconTransformation {
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-translate" viewBox="0 0 16 16"><path d="M4.545 6.714 4.11 8H3l1.862-5h1.284L8 8H6.833l-.435-1.286H4.545zm1.634-.736L5.5 3.956h-.049l-.679 2.022H6.18z"/><path d="M0 2a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v3h3a2 2 0 0 1 2 2v7a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2v-3H2a2 2 0 0 1-2-2V2zm2-1a1 1 0 0 0-1 1v7a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H2zm7.138 9.995c.193.301.402.583.63.846-.748.575-1.673 1.001-2.768 1.292.178.217.451.635.555.867 1.125-.359 2.08-.844 2.886-1.494.777.665 1.739 1.165 2.93 1.472.133-.254.414-.673.629-.89-1.125-.253-2.057-.694-2.82-1.284.681-.747 1.222-1.651 1.621-2.757H14V8h-3v1.047h.765c-.318.844-.74 1.546-1.272 2.13a6.066 6.066 0 0 1-.415-.492 1.988 1.988 0 0 1-.94.31z"/></svg>') 11px 11.5px
  no-repeat;
}
.IconBody {
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-universal-access" viewBox="0 0 16 16"><path d="M9.5 1.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM6 5.5l-4.535-.442A.531.531 0 0 1 1.531 4H14.47a.531.531 0 0 1 .066 1.058L10 5.5V9l.452 6.42a.535.535 0 0 1-1.053.174L8.243 9.97c-.064-.252-.422-.252-.486 0l-1.156 5.624a.535.535 0 0 1-1.053-.174L6 9V5.5Z"/></svg>') 11px 11.5px
  no-repeat;
}
.Iconclothing {
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-suit-diamond" viewBox="0 0 16 16"><path d="M8.384 1.226a.463.463 0 0 0-.768 0l-4.56 6.468a.537.537 0 0 0 0 .612l4.56 6.469a.463.463 0 0 0 .768 0l4.56-6.469a.537.537 0 0 0 0-.612l-4.56-6.468zM6.848.613a1.39 1.39 0 0 1 2.304 0l4.56 6.468a1.61 1.61 0 0 1 0 1.838l-4.56 6.468a1.39 1.39 0 0 1-2.304 0L2.288 8.92a1.61 1.61 0 0 1 0-1.838L6.848.613z"/></svg>') 11px 11.5px
  no-repeat;
}
.Iconhidden {
  background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-lock" viewBox="0 0 16 16"><path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm0 5.996V14H3s-1 0-1-1 1-4 6-4c.564 0 1.077.038 1.544.107a4.524 4.524 0 0 0-.803.918A10.46 10.46 0 0 0 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h5ZM9 13a1 1 0 0 1 1-1v-1a2 2 0 1 1 4 0v1a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-2Zm3-3a1 1 0 0 0-1 1v1h2v-1a1 1 0 0 0-1-1Z"/></svg>') 11px 11.5px
  no-repeat;
}

details[open] p {
  animation: animateDown 0.2s linear forwards;
}

@keyframes animateDown {
  0% {
    opacity: 0;
    transform: translatey(-15px);
  }
  100% {
    opacity: 1;
    transform: translatey(0);
  }
}

details summary { 
  cursor: pointer;
}

details summary > * {
  display: inline;
}

.areaHeader {
  font-size: 50px;
  border-bottom: 1px solid var(--highlightColor);
}

.areaZoneMaps {
    /* We first create a flex layout context */
    display: flex;
    flex-flow: row;
    justify-content: space-around;
    align-items: center;
    padding: 0;
    margin: 0;
    list-style: none;
}

.areaZoneMapImg {
  padding: 5px;
  width: 25%;
  margin-top: 10px;
}

.startHidden {
  opacity: 0;
}

/* Links */
.link {
  font-family: 'Times New Roman', Times, serif;
}
.link:link {
  color: white;
}
.link:visited {
  color: white;
}
.link:hover {
  color: white;
  transform: scale(1.3)
}
.link:active {
  color: white;
}

.characterWikiLink {
  float: right;
  right: 0;
  object-fit: cover;
  position: absolute;
  z-index: 10;
  font-family: 'Times New Roman', Times, serif;
}
.characterWikiLink:link {
  color: white;
}
.characterWikiLink:visited {
  color: white;
}
.characterWikiLink:hover {
  color: white;
  transform: scale(1.3)
}
.characterWikiLink:active {
  color: white;
}

.WikiLink {
  font-family: 'Times New Roman', Times, serif;
}
.WikiLink:link {
  color: white;
}
.WikiLink:visited {
  color: white;
}
.WikiLink:hover {
  color: white;
  transform: scale(1.3)
}
.WikiLink:active {
  color: white;
}

svg{
  margin-top: 5%;
  margin-left: 5%;
  max-width: 90%;
  fill: var(--lowPriorityColor)
}

.svgWhite {
  fill: var(--lightColor)
}

.svgYellow {
  fill: var(--cautionColor)
}
.svgRed {
  fill: var(--negativeColor)
}


/*
.backimg:hover {
  opacity: 0;
  transition: opacity .1s ease-in-out;
  -moz-transition: opacity .1s ease-in-out;
  -webkit-transition: opacity .1s ease-in-out;
}
*/

p {
  line-height: 1em;
  padding: 0;
  margin: 0.5em;
}


/* width */
::-webkit-scrollbar {
  width: 5px;
  height: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  background: var(--foregroundColorB); 
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--highlightColor); 
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555; 
}

.divimg {
  float: right;
  width: 50%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  background-color: var(--paleColor);
  right: 0;
}


@media screen and (max-width: 1500px) {
  label {
    font-size: 0;
  }

  label:before {
    margin: 0;
    font-size: 18px;
  }
  .flexgrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .StatusApplyGridFourAcross {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .StatusApplyGridTwoAcross {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
}

@media screen and (max-width: 1100px) {
  .flexgrid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  label {
    padding: 15px;
  }


  .CharacterGridFourAcross {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .CharacterGridThreeAcross {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .CharacterGridTwoAcross {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .StatusGridFourAcross {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .StatusApplyGridFourAcross {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .statusGrid {
    max-width: 45vw;
    min-width: 45vw;
  }
  .statusGridWide {
    max-width: 90vw;
  }
} 

@media screen and (max-width: 800px) {
  label {
    padding: 5px;
  }
  #titleheader {
    float: right;
    font-size: xx-large;
    padding: 20px 0;
    font-weight: bold;
    text-align: center;
    position: relative;
    right: 5vw;
  }
  .CharacterGridThreeAcross {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
  .StatusApplyGridFourAcross {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-rows: minmax(100px, auto);
  }
}